openapi: "3.0.3"
info:
  description: |-
    Api that exposes interaction with the blog.
  title: Blog Api
  version: "1"
paths:
  /posts:
    get:
      parameters:
        - name: tags
          in: query
          required: false
          description: |-
            Queries blog posts matching the given 'tags'
          schema:
            type: array
            items:
              type: string
          example: "rest"
        - name: limit
          in: query
          required: false
          description: |-
            Sets the maximum limit of posts per page.
          schema:
            type: integer
            default: 10
          example: 5
        - name: page
          in: query
          required: false
          description: |-
            Selects a page of blog posts
          schema:
            type: integer
            default: 1
          example: 3
      responses:
        200:
          description: |-
            Returns a HAL formatted list of blog posts sorted by the latest published
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PostsHAL'
    post:
      description: |-
        Publishes a new blog post for the authorized user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
              required:
                - title
                - content
                - tags
      responses:
        201:
          description: |-
            Returns a HAL formatted partial representation of the newly created blog post
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PartialPostHAL'
      security:
        - basicAuth: []
  /posts/{postId}:
    get:
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
          example: 12
      responses:
        200:
          description: |-
            Returns a HAL formatted blog post data
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PostHAL'
  /comments:
    get:
      parameters:
        - name: postId
          in: query
          description: |-
            Query comments for the specified blog post.
          required: false
          schema:
            type: integer
          example: 10
        - name: parentId
          in: query
          description: |-
            Query comment replies for the specific comment.
          required: false
          schema:
            type: integer
          example: 25
      responses:
        200:
          description: |-
            Returns a list of HAL formatted comments.
          content:
            application/hal+json:
              schema:
                type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      comments:
                        type: array
                        items:
                          $ref: '#/components/schemas/CommentHAL'
  /comments/{commentId}:
    get:
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
          example: 10
      responses:
        200:
          description: |-
            Returns a HAL formatted representation of a comment
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CommentHAL'
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    PostsHAL:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            posts:
              type: array
              items:
                $ref: '#/components/schemas/PartialPostHAL'
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            next:
              $ref: '#/components/schemas/Link'
            previous:
              $ref: '#/components/schemas/Link'
            last:
              $ref: '#/components/schemas/Link'
    Post:
      type: object
      description: Representation of a blog post
      allOf:
        - $ref: '#/components/schemas/PartialPost'
      properties:
        content:
          type: string
    PostHAL:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            author-info:
              $ref: '#/components/schemas/Link'
        _embedded:
          type: object
          properties:
            comments:
              $ref: '#/components/schemas/Link'
      allOf:
        - $ref: '#/components/schemas/Post'
    PartialPost:
      type: object
      description: Partial properties of a blog post for bandwidth saving
      properties:
        title:
          type: string
        publication-date:
          type: string
        author:
          type: string
        upvotes:
          type: integer
        tags:
          type: array
          items:
            type: string
    PartialPostHAL:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
      allOf:
        - $ref: '#/components/schemas/PartialPost'
    Comment:
      type: object
      properties:
        content:
          type: string
        created_at:
          type: string
        author:
          type: string
        reply_count:
          type: integer
    CommentHAL:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            parent:
              $ref: '#/components/schemas/NullableLink'
            author-info:
              $ref: '#/components/schemas/Link'
            post:
              $ref: '#/components/schemas/Link'
        _embedded:
          type: object
          properties:
            replies:
              $ref: '#/components/schemas/Link'
      allOf:
        - $ref: '#/components/schemas/Comment'
      example:
        _links:
          self:
            href: /comments/24
          parent:
            href: /comments/17
          author-info:
            href: /users/324
          post:
            href: /posts/54
        _embedded:
          replies:
            href: /comments?parentId=24
        content: A comment
        created_at: 2023-16-18T20:66:43Z
        author: John Doe
        reply_count: 4
    Link:
      type: object
      properties:
        href:
          type: string
          format: url
    NullableLink:
      type: object
      properties:
        href:
          type: string
          format: url
      nullable: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic